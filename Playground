
function charCount(str) {
    var obj = {};
    for (var char of str){
        char = char.toLowerCase();
        if (/[a-z0-9]/.test(char)) {
            obj[char] = ++ obj[char] || 1;
        }
    }

    return obj;
    
}


console.log(charCount("hello"))

function charcount2(str){
    var obj = {};
    for (var char of str){
        char = char.toLowerCase();
        if (isAlphaNumeric(char)){
            obj[char] = ++ obj[char] || 1;
        }
    }

    return obj;
}

function  isAlphaNumeric(char) {
    let code = char.charAt(0);
    return !(!(code > 47 && code < 58) &&  // numeric (0-9)
        !(code > 64 && code < 91) && // upper alpha (A-Z)
        !(code > 96 && code < 123));

}


function same(arr1, arr2){
    if (arr1.length !== arr2.length){
        return false;
    }

    let frequencyCounter1 = {};
    let frequencyCounter2 = {};

    for (let val of arr1){
        frequencyCounter1[val] = (frequencyCounter1[val] || 0) + 1
    }
    for (let val of arr2){
        frequencyCounter2[val] = (frequencyCounter2[val] || 0) + 1
    }
    for (let key in frequencyCounter1){
        if (!(key **2 in frequencyCounter2)) {
            return false
        }
        if (frequencyCounter2[key ** 2] !== frequencyCounter1[key]) {
            return false
        }
    }
}

function validAnagram(first, second){
    if (first.length !== second.length){
        return false;
    }

    const lookup = {};

    for (let i = 0; i < first.length; i++) {
        let letter = first[i];
        lookup[letter] ? lookup[letter] += 1 : lookup[letter] = 1;
    }

    for (let i=0; i < second.length; i++){
        let letter = second[i];
        if (!lookup[letter]) {
            return false;
        } else {
            lookup[letter] -= 1;
        }
    }

    return true;
}


validAnagram("anagram", "nagaram");

function uniquevalues(ints){

    const lookup = {};
    for (let i=0; i < ints.length; i++) {
        let number = ints[i];
        lookup[number] ? lookup[number] += 1 : lookup[number] = 1;
    }

    return Object.keys(lookup).length;

}

console.log(uniquevalues([1,2,4,5,5]));

function binarySearch(array, val) {
    let min = 0;
    let max = array.length - 1;

    while (min <= max) {
        let middle = Math.floor((min + max) / 2);
        let currentElement = array[middle];

        if (currentElement < val) {
            min = middle + 1;
        }
        else if (currentElement > val) {
            max = middle - 1;
        }
        else {
            return  middle;
        }
    }
    return -1
}

function factorial(n) {
    if (n == 1) return 1;
    return n * factorial(n-1);
}
console.log(factorial(5));


function linearSearch(array, target) {

    for (let i = 0; i < array.length; i++) {
        if (array[i] === target) { return 1}
    }
    return -1
}

console.log(linearSearch([10, 15, 20, 25, 30], 15));

function binarySearch_2(sorted_array, target) {
    let left = 0;
    let right = sorted_array.length - 1;

    while (left <= right) {
        let middle = Math.floor((left + right) / 2);
        let currentElement = sorted_array[middle];

        if (currentElement < target) {
            left = middle + 1;
        } else if (currentElement > target) {
            right = middle - 1;
        } else {
            return middle
        }

    }
    return -1
}


console.log(binarySearch_2([1,3,5,6,8,10], 6))

function bubbleSort(array) {
    var noSwaps;
    for (var i = array.length; i > 0; i--){
        noSwaps = true;
        for (var j = 0; j < i - 1; j++){
            console.log(array, array[j], array[j+1]);
            if (array[j] > array[j+1]) {
                var temp = array[j];
                array[j] = array[j+1];
                array[j+1] = temp;
                noSwaps = false;
            }
        }
        if (noSwaps) break;
    }
    return array;
}


function swap(arr, idx1, idx2) {
    var temp = arr[idx1];
    arr[idx1] = arr[idx2];
    arr[idx2] = temp;
}


function selectionSort(arr) {
    for (var i = 0; i < arr.length; i++) {
        var lowest = i;

        for (var j = i+1; j < arr.length; j ++) {
            if (arr[j] < arr[lowest]) {
                lowest = j;
            }
        }
        var temp = arr[i];
        arr[i] = arr[lowest];
        arr[j] = temp;
    }
    return arr;
}

console.log(selectionSort([0,2,34,22,10,19,17]));